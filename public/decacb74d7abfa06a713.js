import"./styles.css";const favicon=document.querySelector('link[rel="icon"]');import logoImage from"../images/clock.svg";import sunImage from"../images/sun.svg";import moonImage from"../images/moon.svg";const selector=document.querySelectorAll(".selector"),taskInput=document.querySelector("#input__text"),add=document.querySelector(".add"),lists=document.querySelector(".lists"),main=document.querySelector(".tasks"),head=document.querySelector(".head"),clear=document.querySelector(".clear"),itemsLeft=document.querySelector(".items__left"),mode=document.querySelector(".mode"),body=document.querySelector("body");favicon.href=logoImage,mode.src=sunImage;class Task{id=(Date.now()+"").slice(-10);constructor(e){this.todo=e.replace(e[0],e[0].toUpperCase()),this.completed=!1,this.id}}class App{#e=[];newTasks;constructor(){this.#e=JSON.parse(localStorage.getItem("todoList"))||[],add.addEventListener("click",this.newTask.bind(this)),lists.addEventListener("change",this.#t.bind(this)),clear.addEventListener("click",this.#s.bind(this)),this.#a(),this.#o(),selector.forEach((e=>{e.addEventListener("click",(()=>this.#n(e.textContent)))})),mode.addEventListener("click",this.changeMode),this.#n("All")}changeMode(){mode.getAttribute("src")===sunImage?mode.src=moonImage:mode.src=sunImage,body.classList.toggle("lightmode")}newTask(){const e=taskInput.value.trim();if(!e)return alert("Add Task");this.newTasks=new Task(e),this.#e.push(this.newTasks),taskInput.value="",taskInput.blur(),this.#a(),this.#n("All"),this.#i(),this.#o()}#t(e){if(e.target.classList.contains("input__check")){const t=Array.from(lists.children).indexOf(e.target.closest("li"));this.#e[t].completed=e.target.checked,this.#a(),this.#i(),this.#o()}}#i(){localStorage.setItem("todoList",JSON.stringify(this.#e))}#o(){const e=this.#e.filter((e=>!e.completed));0===e.length&&(itemsLeft.textContent="No active tasks"),1===e.length&&(itemsLeft.textContent="1 task left"),e.length>1&&(itemsLeft.textContent=`${e.length} tasks left`)}#s(){this.#e=this.#e.filter((e=>!e.completed)),this.#a(),this.#i(),this.#o(),this.#n("All"),0===this.#e.length&&this.#n("All")}#n(e){selector.forEach((e=>{e.classList.remove("active")}));const t=Array.from(selector).find((t=>t.textContent===e));t&&(t.classList.add("active"),head.textContent=e);const s=this.#e.filter((t=>"All"===e||("Active"===e?!t.completed:"Completed"===e?t.completed:void 0)));0!==s.length||"All"!==e&&"Active"!==e||s.push(new Task("No tasks added")),0===s.length&&"Completed"===e&&s.push(new Task("No Completed tasks ")),this.#a(s)}#a(e=this.#e){lists.innerHTML="",e.forEach((e=>{const t=document.createElement("li");t.classList.add("list"),e.completed&&t.classList.add("completed"),t.innerHTML=`\n      <label>\n        <input id = "${e.id}" class="input__check" type="checkbox" ${e.completed?"checked":""} />\n        <span class="custom-checkbox"></span>\n      </label>\n      <p>${e.todo}</p>\n    `,lists.appendChild(t)})),this.#o()}}const app=new App;document.addEventListener("keypress",(function(e){"Enter"===e.key&&app.newTask()}));