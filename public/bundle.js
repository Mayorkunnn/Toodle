(()=>{const e=document.querySelectorAll(".selector"),t=document.querySelector("#input__text"),s=document.querySelector(".add"),a=document.querySelector(".lists"),n=(document.querySelector(".tasks"),document.querySelector(".head")),i=document.querySelector(".clear"),c=document.querySelector(".items__left"),l=document.querySelector(".mode"),o=document.querySelector("body");class r{id=(Date.now()+"").slice(-10);constructor(e){this.todo=e.replace(e[0],e[0].toUpperCase()),this.completed=!1,this.id}}const d=new class{#e=[];newTasks;constructor(){this.#e=JSON.parse(localStorage.getItem("todoList"))||[],s.addEventListener("click",this.newTask.bind(this)),a.addEventListener("change",this.#t.bind(this)),i.addEventListener("click",this.#s.bind(this)),this.#a(),this.#n(),e.forEach((e=>{e.addEventListener("click",(()=>this.#i(e.textContent)))})),l.addEventListener("click",this.changeMode),this.#i("All")}changeMode(){"../images/sun.svg"===l.getAttribute("src")?l.src="../images/moon.svg":l.src="../images/sun.svg",o.classList.toggle("lightmode")}newTask(){const e=t.value.trim();if(!e)return alert("Add Task");this.newTasks=new r(e),this.#e.push(this.newTasks),t.value="",t.blur(),this.#a(),this.#i("All"),this.#c(),this.#n()}#t(e){if(e.target.classList.contains("input__check")){const t=Array.from(a.children).indexOf(e.target.closest("li"));this.#e[t].completed=e.target.checked,this.#a(),this.#c(),this.#n()}}#c(){localStorage.setItem("todoList",JSON.stringify(this.#e))}#n(){const e=this.#e.filter((e=>!e.completed));0===e.length&&(c.textContent="No active tasks"),1===e.length&&(c.textContent="1 task left"),e.length>1&&(c.textContent=`${e.length} tasks left`)}#s(){this.#e=this.#e.filter((e=>!e.completed)),this.#a(),this.#c(),this.#n(),this.#i("All"),0===this.#e.length&&this.#i("All")}#i(t){e.forEach((e=>{e.classList.remove("active")}));const s=Array.from(e).find((e=>e.textContent===t));s&&(s.classList.add("active"),n.textContent=t);const a=this.#e.filter((e=>"All"===t||("Active"===t?!e.completed:"Completed"===t?e.completed:void 0)));0!==a.length||"All"!==t&&"Active"!==t||a.push(new r("No tasks added")),0===a.length&&"Completed"===t&&a.push(new r("No Completed tasks ")),this.#a(a)}#a(e=this.#e){a.innerHTML="",e.forEach((e=>{const t=document.createElement("li");t.classList.add("list"),e.completed&&t.classList.add("completed"),t.innerHTML=`\n      <label>\n        <input id = "${e.id}" class="input__check" type="checkbox" ${e.completed?"checked":""} />\n        <span class="custom-checkbox"></span>\n      </label>\n      <p>${e.todo}</p>\n    `,a.appendChild(t)})),this.#n()}};document.addEventListener("keypress",(function(e){"Enter"===e.key&&d.newTask()}))})();