import"./styles.css";const selector=document.querySelectorAll(".selector"),taskInput=document.querySelector("#input__text"),add=document.querySelector(".add"),lists=document.querySelector(".lists"),main=document.querySelector(".tasks"),head=document.querySelector(".head"),clear=document.querySelector(".clear"),itemsLeft=document.querySelector(".items__left"),mode=document.querySelector(".mode"),body=document.querySelector("body");class Task{id=(Date.now()+"").slice(-10);constructor(t){this.todo=t.replace(t[0],t[0].toUpperCase()),this.completed=!1,this.id}}class App{#t=[];newTasks;constructor(){this.#t=JSON.parse(localStorage.getItem("todoList"))||[],add.addEventListener("click",this.newTask.bind(this)),lists.addEventListener("change",this.#e.bind(this)),clear.addEventListener("click",this.#s.bind(this)),this.#a(),this.#i(),selector.forEach((t=>{t.addEventListener("click",(()=>this.#n(t.textContent)))})),mode.addEventListener("click",this.changeMode),this.#n("All")}changeMode(){"../images/sun.svg"===mode.getAttribute("src")?mode.src="../images/moon.svg":mode.src="../images/sun.svg",body.classList.toggle("lightmode")}newTask(){const t=taskInput.value.trim();if(!t)return alert("Add Task");this.newTasks=new Task(t),this.#t.push(this.newTasks),taskInput.value="",taskInput.blur(),this.#a(),this.#n("All"),this.#l(),this.#i()}#e(t){if(t.target.classList.contains("input__check")){const e=Array.from(lists.children).indexOf(t.target.closest("li"));this.#t[e].completed=t.target.checked,this.#a(),this.#l(),this.#i()}}#l(){localStorage.setItem("todoList",JSON.stringify(this.#t))}#i(){const t=this.#t.filter((t=>!t.completed));0===t.length&&(itemsLeft.textContent="No active tasks"),1===t.length&&(itemsLeft.textContent="1 task left"),t.length>1&&(itemsLeft.textContent=`${t.length} tasks left`)}#s(){this.#t=this.#t.filter((t=>!t.completed)),this.#a(),this.#l(),this.#i(),this.#n("All"),0===this.#t.length&&this.#n("All")}#n(t){selector.forEach((t=>{t.classList.remove("active")}));const e=Array.from(selector).find((e=>e.textContent===t));e&&(e.classList.add("active"),head.textContent=t);const s=this.#t.filter((e=>"All"===t||("Active"===t?!e.completed:"Completed"===t?e.completed:void 0)));0!==s.length||"All"!==t&&"Active"!==t||s.push(new Task("No tasks added")),0===s.length&&"Completed"===t&&s.push(new Task("No Completed tasks ")),this.#a(s)}#a(t=this.#t){lists.innerHTML="",t.forEach((t=>{const e=document.createElement("li");e.classList.add("list"),t.completed&&e.classList.add("completed"),e.innerHTML=`\n      <label>\n        <input id = "${t.id}" class="input__check" type="checkbox" ${t.completed?"checked":""} />\n        <span class="custom-checkbox"></span>\n      </label>\n      <p>${t.todo}</p>\n    `,lists.appendChild(e)})),this.#i()}}const app=new App;document.addEventListener("keypress",(function(t){"Enter"===t.key&&app.newTask()}));